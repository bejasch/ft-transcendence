---
name: ft-transcendence

# https://github.com/docker/compose/pull/5140
x-env-watch: &env-watch
    WATCH: "${WATCH:-0}"

x-env-caddy-backend: &env-caddy-backend
    <<: *env-watch
    BACKEND_PORT: "${BACKEND_PORT:-3000}"
    DOMAINS: "${DOMAINS:-localhost}"

x-env-files: &env-files
    - config.env

services:
    caddy:
        build: "./caddy/"
        container_name: caddy
        restart: unless-stopped
        ports:
            - "${HTTP_PORT:-8080}:8080"
            - "${HTTPS_PORT:-8443}:8443"
        networks:
            ft-transcendence-net:
                ipv4_address: &caddy-ip 10.42.42.1
        volumes:
            - "caddy-data:/frontend/.local/share/caddy/"
            - "frontend:/frontend/dist/:ro"
        environment:
            <<: *env-caddy-backend
            HTTP_DOMAINS: "${HTTP_DOMAINS:-http://localhost}"
            HTTPS_DOMAINS: "${HTTPS_DOMAINS:-https://localhost}"
            CADDY_EXTRA_GLOBAL_DIRECTIVES: "${CADDY_EXTRA_GLOBAL_DIRECTIVES:-}"
            CADDY_EXTRA_SITE_DIRECTIVES: "${CADDY_EXTRA_SITE_DIRECTIVES:-}"
        depends_on:
            - frontend
            - backend
        develop:
            watch:
                - path: "./caddy/Caddyfile"
                  action: sync
                  target: "/etc/caddy/Caddyfile"
        env_file: *env-files

    frontend:
        build: "./frontend/"
        container_name: frontend
        restart: no
        ports:
            - "${LIVE_RELOAD_PORT:-35729}:${LIVE_RELOAD_PORT:-35729}"
        environment: *env-watch
        volumes:
            - "frontend:/frontend/dist/"
        develop:
            watch:
                - path: "./frontend/"
                  action: sync # Might fail on MacOS when node_modules is touched, use `rebuild` as fallback
                  target: "/frontend/"
                - path: "./frontend/package.json"
                  action: rebuild
                  target: "/frontend/package.json"
                - path: "./frontend/esbuild.config.js"
                  action: rebuild
                  target: "/frontend/esbuild.config.js"
                - path: "./frontend/reload-server.js"
                  action: rebuild
                  target: "/frontend/reload-server.js"
        env_file: *env-files
        depends_on:
            backend:
                condition: service_healthy

    backend:
        build: "./backend/"
        container_name: backend
        restart: unless-stopped
        networks:
            ft-transcendence-net:
                ipv4_address: &backend-ip 10.42.42.2
        environment:
            <<: *env-caddy-backend
            NODE_ENV: "${NODE_ENV:-development}"
            DB_PATH: "${DB_PATH:-}"
            LOGSTASH_HOST: "logstash"
            LOGSTASH_PORT: "${LOGSTASH_PORT:-5050}"
        volumes:
            - "drizzle:/backend/drizzle/"
            - "./.secrets/backend_vault_token:/run/secrets/backend_vault_token"
        depends_on:
            vault:
                restart: true
                condition: service_healthy
            logstash:
                restart: true
                condition: service_healthy
                required: false
        develop:
            watch:
                - path: "./backend/"
                  action: sync # Might fail on MacOS when node_modules is touched, use `rebuild` as fallback
                  target: "/backend/"
                - path: "./backend/package.json"
                  action: rebuild
                  target: "/backend/package.json"
                - path: "./backend/esbuild.config.js"
                  action: rebuild
                  target: "/backend/esbuild.config.js"
        env_file: *env-files

    elasticsearch:
        profiles: [elk]
        image: docker.elastic.co/elasticsearch/elasticsearch:8.17.3
        container_name: elasticsearch
        environment:
            ES_JAVA_OPTS: "-Xms512m -Xmx512m"
            discovery.type: "single-node"
            xpack.security.enabled: "false"
        volumes:
            - "elasticsearch-data:/usr/share/elasticsearch/data/"
        ports:
            - "${ELASTICSERACH_PORT:-9200}:${ELASTICSERACH_PORT:-9200}"
        networks:
            ft-transcendence-net:
                ipv4_address: &elasticsearch-ip 10.42.42.3
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "curl", "--fail", "http://localhost:${ELASTICSERACH_PORT:-9200}"]
            interval: 30s
            timeout: 10s
            retries: 5

    logstash:
        profiles: [elk]
        image: docker.elastic.co/logstash/logstash:8.17.3
        container_name: logstash
        volumes:
            - "./elk/logstash/pipeline/:/usr/share/logstash/pipeline/"
            - "./elk/logstash/config/logstash.yaml:/usr/share/logstash/config/logstash.yaml:ro"
        ports:
            - "${LOGSTASH_PORT:-5050}:${LOGSTASH_PORT:-5050}/tcp"
            - "${LOGSTASH_PORT:-5050}:${LOGSTASH_PORT:-5050}/udp"
            - "${LOGSTASH_API_PORT:-9600}:${LOGSTASH_API_PORT:-9600}" # Logstash API port for health checking
        environment:
            LS_JAVA_OPTS: "-Xmx256m -Xms256m"
        networks:
            ft-transcendence-net:
                ipv4_address: &logstash-ip 10.42.42.4
        depends_on:
            elasticsearch:
                condition: service_healthy
        restart: unless-stopped
        healthcheck:
            test:
                ["CMD", "curl", "--fail", "http://localhost:${LOGSTASH_API_PORT:-9600}/_node/stats"]
            interval: 10s
            timeout: 5s
            retries: 3
            start_period: 60s

    kibana:
        profiles: [elk]
        image: docker.elastic.co/kibana/kibana:8.17.3
        container_name: kibana
        ports:
            - "${KIBANA_PORT:-5601}:${KIBANA_PORT:-5601}"
        environment:
            ELASTICSEARCH_HOSTS: "http://elasticsearch:${ELASTICSERACH_PORT:-9200}"
        networks:
            ft-transcendence-net:
                ipv4_address: &kibana-ip 10.42.42.5
        depends_on:
            elasticsearch:
                condition: service_healthy
        restart: unless-stopped

    vault:
        build:
            context: "./vault/"
            args:
                VAULT_API_PORT: ${VAULT_API_PORT:-8200}
        container_name: vault
        restart: unless-stopped
        networks:
            ft-transcendence-net:
                ipv4_address: &vault_ip 10.42.42.42
        extra_hosts:
            backend: *backend-ip
            caddy: *caddy-ip
            elasticsearch: *elasticsearch-ip
            logstash: *logstash-ip
            kibana: *kibana-ip
        cap_add:
            - IPC_LOCK
        volumes:
            - "vault-storage:/vault/file/"
            - "vault-secret:/vault/secret/"
            - "vault-logs:/vault/logs/"
            - "./env.json:/vault/config/env.json:ro"
            - "./.secrets/backend_vault_token:/run/secrets/backend_vault_token"
        environment:
            <<: *env-watch
            LOGLEVEL: "debug"
            SAVE_UNSEAL_KEYS: "1"
            SAVE_ROOT_TOKEN: "1"
        tty: true
        develop:
            watch:
                - path: "./vault/entrypoint.sh"
                  action: sync+restart
                  target: "/entrypoint.sh"
                - path: "./vault/replace_json_templates.py"
                  action: sync+restart
                  target: "/replace_json_templates.py"
                - path: "./vault/healthcheck.sh"
                  action: sync+restart
                  target: "/healthcheck.sh"
                - path: "./vault/config.hcl.template"
                  action: sync+restart
                  target: "/vault/config/config.hcl.template"
                - path: "./vault/policies/"
                  action: sync+restart
                  target: "/vault/policies/"

volumes:
    vault-storage:
    vault-secret:
    vault-logs:
    caddy-data:
    drizzle:
    frontend:
    elasticsearch-data:

networks:
    ft-transcendence-net:
        enable_ipv6: false
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: 10.42.42.0/24
                  ip_range: 10.42.42.0/24
                  gateway: 10.42.42.254
